# Copyright 2015 VMware, Inc.  All rights reserved.
# SPDX-License-Identifier: MIT OR GPL-3.0-only
---
# tasks file for kubernetes-ca
- name: make sure kubernetes-ca depot exists
  file: path={{kubernetes_ca_depot}} mode=0755 state=directory

- name: create cluster root ca key
  shell: >
    {{openssl}} genrsa -out {{kubernetes_ca_depot}}/ca-key.pem 2048
    creates={{kubernetes_ca_depot}}/ca-key.pem

- name: create cluster root ca 
  shell: >
    {{openssl}} req -x509 -new -nodes -days 10000
    -key {{kubernetes_ca_depot}}/ca-key.pem
    -out {{kubernetes_ca_depot}}/ca.pem
    -subj "/CN=kube-ca"
    creates={{kubernetes_ca_depot}}/ca.pem

- name: create openssl.cnf
  template: src=openssl.cnf.j2 dest={{kubernetes_ca_depot}}/openssl.cnf

- name: slurp openssl.cnf content
  slurp:
    src: "{{kubernetes_ca_depot}}/openssl.cnf"
  register: openssl_cnf
  run_once: true

- name: record openssl.cnf hash
  set_fact:
    openssl_cnf_sha1: "{{ openssl_cnf.content | hash('sha1') }}"

- name: generate apiserver key
  shell: >
    {{openssl}} genrsa -out {{kubernetes_ca_depot}}/apiserver-key.pem 2048
    creates={{kubernetes_ca_depot}}/apiserver-key.pem

- name: generate apiserver csr
  shell: >
    {{openssl}} req -new -key {{kubernetes_ca_depot}}/apiserver-key.pem
    -out {{kubernetes_ca_depot}}/apiserver-{{openssl_cnf_sha1}}.csr -subj "/CN=kube-apiserver"
    -config {{kubernetes_ca_depot}}/openssl.cnf
    creates={{kubernetes_ca_depot}}/apiserver-{{openssl_cnf_sha1}}.csr

- name: generate apiserver crt
  shell: >
    {{openssl}} x509 -req -in {{kubernetes_ca_depot}}/apiserver-{{openssl_cnf_sha1}}.csr
    -CA {{kubernetes_ca_depot}}/ca.pem -CAkey {{kubernetes_ca_depot}}/ca-key.pem
    -CAcreateserial -out {{kubernetes_ca_depot}}/apiserver-{{openssl_cnf_sha1}}.pem -days 3650
    -extensions v3_req -extfile {{kubernetes_ca_depot}}/openssl.cnf
    creates={{kubernetes_ca_depot}}/apiserver-{{openssl_cnf_sha1}}.pem

- name: create kube-apiserver-kubelet-client-ext.conf
  template: src=kube-apiserver-kubelet-client-ext.conf.j2 dest={{kubernetes_ca_depot}}/kube-apiserver-kubelet-client-ext.conf

- name: generate apiserver kubelet client key
  shell: >
    {{openssl}} genrsa -out {{kubernetes_ca_depot}}/kube-apiserver-kubelet-client-key.pem 2048
    creates={{kubernetes_ca_depot}}/kube-apiserver-kubelet-client-key.pem

- name: generate apiserver kubelet client csr
  shell: >
    {{openssl}} req -new -key {{kubernetes_ca_depot}}/kube-apiserver-kubelet-client-key.pem
    -out {{kubernetes_ca_depot}}/kube-apiserver-kubelet-client.csr
    -subj "/O=system:masters/CN=kube-apiserver-kubelet-client"
    creates={{kubernetes_ca_depot}}/kube-apiserver-kubelet-client.csr

- name: generate apiserver kubelet client certificate
  shell: >
    {{openssl}} x509 -req -in {{kubernetes_ca_depot}}/kube-apiserver-kubelet-client.csr
    -CA {{kubernetes_ca_depot}}/ca.pem -CAkey {{kubernetes_ca_depot}}/ca-key.pem
    -CAcreateserial -out {{kubernetes_ca_depot}}/kube-apiserver-kubelet-client.pem -days 3650
    -extensions v3_ca -extfile {{kubernetes_ca_depot}}/kube-apiserver-kubelet-client-ext.conf
    creates={{kubernetes_ca_depot}}/kube-apiserver-kubelet-client.pem

- name: generate worker key
  shell: >
    {{openssl}} genrsa -out {{kubernetes_ca_depot}}/worker-key.pem 2048
    creates={{kubernetes_ca_depot}}/worker-key.pem

- name: generate worker csr
  shell: >
    {{openssl}} req -new -key {{kubernetes_ca_depot}}/worker-key.pem
    -out {{kubernetes_ca_depot}}/worker.csr -subj "/CN=kube-worker"
    creates={{kubernetes_ca_depot}}/worker.csr

- name: generate worker crt
  shell: >
    {{openssl}} x509 -req -in {{kubernetes_ca_depot}}/worker.csr
    -CA {{kubernetes_ca_depot}}/ca.pem -CAkey {{kubernetes_ca_depot}}/ca-key.pem
    -CAcreateserial -out {{kubernetes_ca_depot}}/worker.pem -days 3650
    creates={{kubernetes_ca_depot}}/worker.pem

- name: generate admin key
  shell: >
    {{openssl}} genrsa -out {{kubernetes_ca_depot}}/admin-key.pem 2048
    creates={{kubernetes_ca_depot}}/admin-key.pem

- name: generate admin csr
  shell: >
    {{openssl}} req -new -key {{kubernetes_ca_depot}}/admin-key.pem
    -out {{kubernetes_ca_depot}}/admin.csr -subj "/CN=kube-admin"
    creates={{kubernetes_ca_depot}}/admin.csr

- name: generate admin crt
  shell: >
    {{openssl}} x509 -req -in {{kubernetes_ca_depot}}/admin.csr
    -CA {{kubernetes_ca_depot}}/ca.pem -CAkey {{kubernetes_ca_depot}}/ca-key.pem
    -CAcreateserial -out {{kubernetes_ca_depot}}/admin.pem -days 3650
    creates={{kubernetes_ca_depot}}/admin.pem

- name: create client ca key
  shell: >
    {{openssl}} genrsa -out {{kubernetes_ca_depot}}/client-ca-key.pem 2048
    creates={{kubernetes_ca_depot}}/client-ca-key.pem

- name: create client ca pem
  shell: >
    {{openssl}} req -x509 -new -nodes -days 10000
    -key {{kubernetes_ca_depot}}/client-ca-key.pem
    -out {{kubernetes_ca_depot}}/client-ca.pem
    -subj "/CN=kube-client-ca"
    creates={{kubernetes_ca_depot}}/client-ca.pem

- name: generate client key
  shell: >
    {{openssl}} genrsa -out {{kubernetes_ca_depot}}/client-key.pem 2048
    creates={{kubernetes_ca_depot}}/client-key.pem

- name: generate client csr
  shell: >
    {{openssl}} req -new -key {{kubernetes_ca_depot}}/client-key.pem
    -out {{kubernetes_ca_depot}}/client.csr -subj "/CN=apiserver-client"
    creates={{kubernetes_ca_depot}}/client.csr

- name: generate client crt
  shell: >
    {{openssl}} x509 -req -in {{kubernetes_ca_depot}}/client.csr
    -CA {{kubernetes_ca_depot}}/client-ca.pem -CAkey {{kubernetes_ca_depot}}/client-ca-key.pem
    -CAcreateserial -out {{kubernetes_ca_depot}}/client.pem -days 3650
    creates={{kubernetes_ca_depot}}/client.pem

- name: generate webhook key
  shell: >
    {{openssl}} genrsa -out {{kubernetes_ca_depot}}/webhook-key.pem 2048
    creates={{kubernetes_ca_depot}}/webhook-key.pem
  when: generate_webhook_certs

- name: generate webook csr
  shell: >
    {{openssl}} req -new -key {{kubernetes_ca_depot}}/webhook-key.pem
    -out {{kubernetes_ca_depot}}/webhook.csr -subj "/CN=*.{{webhook_ns}}.svc"
    creates={{kubernetes_ca_depot}}/webhook.csr
  when: generate_webhook_certs

- name: generate webhook crt
  shell: >
    {{openssl}} x509 -req -in {{kubernetes_ca_depot}}/webhook.csr
    -CA {{kubernetes_ca_depot}}/ca.pem -CAkey {{kubernetes_ca_depot}}/ca-key.pem
    -CAcreateserial -out {{kubernetes_ca_depot}}/webhook.pem -days 3650
    creates={{kubernetes_ca_depot}}/webhook.pem
  when: generate_webhook_certs

